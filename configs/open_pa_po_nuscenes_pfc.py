grid_shape = [480,360,32]
norm_cfg=dict(type='BN1d', eps=1e-5, momentum=0.01)
dataset = dict(
    name= 'nuscenes',
    version= 'v1.0-mini',
    path= '/home/coisini/data/nuscenes',
    sample_pkl_path= '/home/coisini/data/nuscenes/nuscenes_pkl',
    clip_feature_path = '/home/coisini/data/nuscenes_openseg_features',
    rotate_aug= False,
    flip_aug= False,
    max_volume_space= [50, 3.1415926, 3],
    min_volume_space= [0, -3.1415926, -5],
    gt_generator= dict(
        sigma= 5),
    grid_size= [480,360,32],
    inst_aug= dict(
        if_use= False,
        aug_type= 'contmix',
        inst_pkl_path= '../data/nuscenes/inst_database_train_info.pkl',
        inst_trans= True, # random translation for contmix
        inst_rotate= True,
        inst_flip= True,
        inst_add= True
    ),
    num_worker= 4,
    min_points= 15
)

model = dict(
    backbone=dict(
        type='_Asymm3DSpconv',
        grid_size=grid_shape,
        input_channels=16,
        base_channels=32,
        more_conv=True,
        out_channels=768,
        norm_cfg=norm_cfg),
    voxel_encoder=dict(
        type='SegVFE',
        feat_channels=[512, 256, 256, 256],
        in_channels=768,
        with_voxel_center=True,
        feat_compression=16,
        return_point_feats=False),
        # voxel_encoder=dict(
        #     type='_CylinderVFE',
        #     grid_size=grid_shape,
        #     fea_dim=9,
        #     out_fea_dim=256,
        #     fea_compre=16,
        #     norm_cfg=norm_cfg
        # ),
    geometric_ensemble= True,
    geometric_ensemble_alpha= 0.0,
    geometric_ensemble_beta= 1.0,
    print_freq= 50,
    pix_fusion= True,
    pix_fusion_path= './checkpoints/resnet18-5c106cde.pth',
    use_sara= True,
    use_att= True,
    model_load_path= None,
    scatter_points_mode= 'mean',
    model_save_path= './nusc_mini.pt',
    train_batch_size= 1,
    val_batch_size= 1,
    learning_rate= 0.0005,
    LR_MILESTONES= [24, 32],
    IMAGE_SIZE= [900,1600],
    deconv_layers= 1,
    pe_type= 'mpe',
    query_embed_dims= 256,
    num_queries= 128,
    deconv_hidden_dim= 64,
    clip_vision_dim= 768,
    clip_text_dim= 768,
    LR_GAMMA= 0.2,
    check_iter= 162,
    max_epoch=300,
    post_proc=dict(
        threshold= 0.1,
        nms_kernel= 5,
        top_k= 100),
    loss_mask=dict(
            type= 'mmdet.FocalLoss',
            use_sigmoid= True,
            gamma= 2.0,
            alpha= 0.25,
            reduction= 'mean',
            loss_weight= 1.0),
    loss_dice=dict(
        type= 'mmdet.DiceLoss',
        loss_weight= 2.0),
    loss_cls=dict(
        type= 'mmdet.FocalLoss',
        use_sigmoid= True,
        gamma= 4.0,
        alpha= 0.25,
        loss_weight= 1.0),
    center_loss= 'MSE',
    offset_loss= 'L1',
    center_loss_weight= 100,
    offset_loss_weight= 10,
)
# custom_imports = dict(
#     imports=[
#         'lcps.network.voxel_encoder.cylinder_encoder',
#     ],
#     allow_failed_imports=False)